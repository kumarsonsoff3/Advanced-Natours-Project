.row {
  // simply mean that if  the viewport has enough width then it will continue to show in that space, but if the viewport width is smaller then it will start to addapt!!
  max-width: $grid-width;
  margin: 0 auto;
  // to center block elements inside another block elements

  // not pesudo class, to select everything except the last child!!
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearFix;

  .col-1-of-2 {
    // huge advantage of using this in sass is that here we can mix the units. We cannot do calc's between the different units with native CSS.

    // In calc function, to use the sass variable then we need to nest them into parentsis like #{$variableName}
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  //   ^ for class starts with col
  // $ for class ends with col
  // * for class contain col
  // we can select specific "href" attribute, or something like specific target attribute, and much more!

  // attribute selector [alt="logo"]
  // ^= is used to select the all elements starting with the "col-"
  // we also can use the * to select all the elements which contain the "col-"
  // $ to select elements which have class ending with "col-"
  [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-3 {
    width: calc(
      (2 * ((100% - 2 * #{$gutter-horizontal})) / 3) + #{$gutter-horizontal}
    );
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}

// another very powerfull pseudo-class
// .row:not(:child)
// not() will select everything except the child
