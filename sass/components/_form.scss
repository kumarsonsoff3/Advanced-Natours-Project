.form {
  &__input {
    font-size: 1.5rem;
    padding: 1.5rem 2rem;
    color: inherit;
    border-radius: 2px;
    background-color: rgba($color-white, 0.5);
    border: none;
    font-family: inherit;
    border-bottom: 3px solid transparent;
    transition: all 0.2s;
    display: block;
    width: 80%;

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;

      &:invalid {
        border-bottom: 3px solid $color-secondary-dark;
      }
    }

    &::-webkit-input-placeholder {
      color: $color-grey-dark2;
    }
  }

  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-top: 0.7rem;
    display: block;
    margin-left: 2rem;
    transition: all 0.3s;
  }

  //   in CSS, the simple &__input:placeholder-shown  &__label doesn't work for the siblings, Only work for the child elements.

  // But in CSS, we have a very powerful selector that allows us to Select the adjacent sibling "+", mean the sibling that comes immediately after the above selected sibling.

  // But is there is some other element in between, then we should use the general sibling selector with "~"

  &__input:placeholder-shown + &__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  &__radio {
    &-group {
      width: 49%;
      display: inline-block;
    }

    &_input {
      opacity: 0;
    }

    &_label {
      font-size: $default-font-size;
      cursor: pointer;
      position: relative;
      padding-left: 3rem;
    }

    &-btn {
      height: 2.5rem;
      width: 2.5rem;
      border: 4px solid $color-primary;
      border-radius: 50%;
      display: inline-block;
      position: absolute;
      top: -0.2rem;
      left: -0.7rem;

      &::after {
        content: "";
        display: block;
        width: 1.2rem;
        height: 1.2rem;
        border-radius: 50%;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: $color-primary;
        opacity: 0;
        transition: all 0.2s;
      }
    }
    &_input:checked ~ &_label &-btn::after {
      opacity: 1;
    }
  }
}
